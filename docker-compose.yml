version: '3.6'
services:
  # database for nisq-analyzer, qc-atlas and pattern-atlas
  # each container has it's own database, generated by the postgre-multi image
  db:
    image: lmmdock/postgres-multi:latest
    environment:
      # specifies user:pw for each container
      POSTGRES_USERS: 'planqk:planqk|nisq:nisq|patternpedia:patternpedia'
      # specifies db name for each container
      POSTGRES_DATABASES: 'planqk:planqk|nisq:nisq|patternpedia:patternpedia'
    volumes:
      # use this line to save the postgres data
      # - ./postgres-data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - default
  qc-atlas-ui:
    build: 
      context: ../qc-atlas-ui
    image: atlas-ui:latest
    environment:
      # because the requests are performed from the browser and not
      # from the container itself we have to specify localhost here 
      # and **not** the container name
      ALTAS_URL: localhost
      ATLAS_PORT: 8080
      PATTERNPEDIA_URL: localhost
      PATTERNPEDIA_PORT: 8082
      NISQ_ANALYZER_URL: localhost
      NISQ_ANALYZER_PORT: 8081
    ports:
      - "4200:4200"
    networks:
      - default
  qc-atlas:
    image: planqk/atlas
    environment:
      POSTGRES_HOSTNAME: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: planqk
      POSTGRES_PASSWORD: planqk
      POSTGRES_DB: planqk
    ports:
      - "8080:8080"
    networks:
      - default
  pattern-atlas-api:
    image: patternpedia/patternrepo-api:latest
    environment:
      JDBC_DATABASE_URL: db
      JDBC_DATABASE_NAME: patternpedia
      JDBC_DATABASE_USERNAME: patternpedia
      JDBC_DATABASE_PASSWORD: patternpedia
      JDBC_DATABASE_PORT: 5432
      API_PORT: 8080
    ports:
      - '8082:8080'
    networks:
      - default
  nisq-analyzer:
    image: planqk/nisq-analyzer
    environment:
      POSTGRES_HOSTNAME: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: nisq
      POSTGRES_PASSWORD: nisq
      POSTGRES_DB: nisq
      NISQ_HOSTNAME: qiskit-service
      NISQ_PORT: 5000
      NISQ_VERSION: v1.0
    ports:
      - '8081:8080'
    networks:
      - default
  # used by nisq analyzer for execution and transpilation
  qiskit-service:
    image: planqk/qiskit-service
    environment:
      - REDIS_URL=redis://redis
    ports:
      - '5000:5000'
    networks:
      - default
  # redis server for qiskit service
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - default
networks:
  default:
    driver: bridge
